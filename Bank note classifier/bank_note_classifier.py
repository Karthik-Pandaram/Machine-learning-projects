# -*- coding: utf-8 -*-
"""Bank note classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oHdVxjJGyIh6EN1ilAOu6UtF9EmFI7gV
"""

#!pip install -U pgmpy==0.1.11
#!pip install -U bnlearn
#!pip install openml

import openml

import bnlearn
import pandas as pd
import json

# Bankote dataset id = 1462

dataset = openml.datasets.get_dataset(1462)

# Print a summary

print(
    f"This is dataset '{dataset.name}', the target feature is "
    f"'{dataset.default_target_attribute}'"
)
print(f"URL: {dataset.url}")
print(dataset.description[:500])

# Conversion of OpenMl datasets to pandas dataframe

X, y, categorical_indicator, attribute_names = dataset.get_data(
    target=dataset.default_target_attribute, dataset_format="dataframe"
)
#print(X.head())
#print(X.info())
#print(type(X))

combined_data = pd.concat([X, y], axis=1)

# Rounding off the data and converting it to Integer

combined_data_descrete = round(combined_data).astype(int)

# Bayesian network

# Loading the Banknote dataset containing mixed variables
df_raw = combined_data_descrete


# Structure learning

DAG = bnlearn.structure_learning.fit(df_raw, methodtype='hc',scoretype='bic')
# Plot
G = bnlearn.plot(DAG)
print(df_raw)

# Parameter learning
model = bnlearn.parameter_learning.fit(DAG, combined_data_descrete )
bnlearn.print_CPD(model)

# Print CPDs
bnlearn.print_CPD(model)
# Make inference
q = bnlearn.inference.fit(model, variables=['Class'], evidence={'V1': 10, 'V2': 2})

print(q.values)
print(q.variables)
print(q._str())

result = { "result" :q._str()}

with open("result.json","w") as outfile:
  json.dump(result,outfile)